version: '3.8'

services:

  user-service:
    container_name: userMicroService
    build:
      context: ./user-management-service
      dockerfile: Dockerfile
    networks:
      - microservices-parent_network
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka


  order-service:
    container_name: orderMicroService
    build:
      context: ./order-management-service
      dockerfile: Dockerfile
    networks:
      - microservices-parent_network
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - hazelcast
      - kafka

  postgres:
    image: postgres:14
    container_name: my_postgres_db
    environment:
      POSTGRES_DB: my_database
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: Luka1234!
    networks:
      - microservices-parent_network
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  hazelcast:
    image: hazelcast/hazelcast:5.5.0
    container_name: hazelcast_instance
    networks:
      - microservices-parent_network
    ports:
      - "5701:5701"
  zookeeper:
    image: zookeeper:latest
    networks:
      - microservices-parent_network
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    networks:
      - microservices-parent_network
    depends_on:
      - zookeeper
volumes:
  postgres_data:
networks:
  microservices-parent_network:
    driver: bridge


